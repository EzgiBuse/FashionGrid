@model ProductDto
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
@Html.Partial("_HeadPartialView")
<style>
    .btn-outline-primary.active, .btn-outline-primary.active:hover {
        background-color: #007bff !important; /* Change background color */
        color: white !important; /* Ensure text color is white */
        border-color: #007bff !important; /* Optional: change border color to match */
    }
</style>
<body>
    

    @Html.Partial("_HeaderPartialView")
    <hr />
    <section class="main-content" style="padding-bottom: 100px; padding-top: 70px;">
        <!-- Increased bottom padding -->
        <div class="container mt-5">
            <div class="row align-items-center">
                <div class="col-md-6 text-center">
                    <!-- Main Product Image centered with added shadow for better emphasis -->
                    <img src="@Url.Content(@Model.ImageUrls[0])" alt="@Model.Name" class="product-image shadow"
                         style="width: 100%; max-width: 400px; height: auto; border-radius: 5px;">
                </div>
                <div class="col-md-6">
                    <div class="product-detail-content">
                        <h2 class="text-primary">@Model.Name</h2>
                        <p class="price" style="font-size: 24px; color: #555;">€@Model.Price.ToString("0.00")</p>
                        <p>@Model.Description</p>
                        @if (Model.Attributes != null)
                        {
                            foreach (var attribute in Model.Attributes)
                            {
                                <div class="product-attribute mb-2">
                                    <h4>@Html.Raw(attribute.Key)</h4>
                                    <div class="btn-group">
                                       @foreach (var value in attribute.Value)
                                        {
                                            <button class="btn btn-outline-primary btn-sm attribute-button"
                                                    data-attribute="attribute.Key" data-value="@value"
                                                    onclick="selectAttribute(this)">
                                                @value
                                            </button>
                                        }

                                    </div>
                                </div>
                            }
                        }
                        <div class="add-to-cart mt-4">
                            <button type="button" class="btn btn-lg btn-primary" onclick="addToCart()">Add to Cart</button>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <hr />

    @Html.Partial("_FooterPartialView")
    @Html.Partial("_ScriptsPartialView")

    <script>
        window.selectedAttributes = {};

        function selectAttribute(button) {
            var attributeKey = button.getAttribute('data-attribute');
            var attributeValue = button.getAttribute('data-value');

            // Toggle selection for this attribute value
            if (selectedAttributes[attributeKey] === attributeValue) {
                delete selectedAttributes[attributeKey]; // Deselect if already selected
            } else {
                selectedAttributes[attributeKey] = attributeValue; // Change to new selection or add new
            }

            // Update button styles
            updateButtons(attributeKey);
        }

        function updateButtons(attributeKey) {
            var buttons = document.querySelectorAll(`button[data-attribute='${attributeKey}']`);
            buttons.forEach(btn => {
                if (btn.getAttribute('data-value') === selectedAttributes[attributeKey]) {
                    btn.classList.add('active');
                } else {
                    btn.classList.remove('active');
                }
            });
        }

        function addToCart() {
            // Prepare the data to be sent
            var data = {
                productId: '@Model.Id',
                name: '@Model.Name',
                price: @Model.Price,
               
                description: '@Model.Description',
                imageUrl: '@Model.ImageUrls[0]', // Assuming the first image URL is used
                attributes: Object.values(selectedAttributes)
            };

            // Fetch API to send data to the server
            fetch('/Cart/AddToCart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data) // Send data as JSON string
            })
                .then(response => {
                    if (response.ok) {
                        alert('Product added to cart successfully!');
                    } else {
                        throw new Error('Something went wrong on the server side!');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to add to cart. Please try again.');
                });
        }
    </script>

</body>
</html>
